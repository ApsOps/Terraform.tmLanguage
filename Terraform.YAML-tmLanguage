# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Terraform
scopeName: source.terraform
fileTypes: ['tf']
uuid: 9060ca81-906d-4f19-a91a-159f4eb119d6

patterns:
# Comments
- comment: Comments
  name: comment.line.number-sign.terraform
  begin: "#"
  end: $\n?
  captures:
    "0":
      name: punctuation.definition.comment.terraform

# Language constants
- comment: Language constants (true, false, yes, no, on, off)
  match: \b(true|false|yes|no|on|off)\b
  name: constant.language.terraform

# Numeric types
- comment: Numbers
  match: \b([0-9]+)([kKmMgG]b?)?\b
  name: constant.numeric.terraform
- comment: Hex numbers
  match: \b(0x[0-9A-Fa-f]+)([kKmMgG]b?)?\b
  name: constant.numeric.terraform

# Resource blocks (two variables)
- captures:
    '1':
      name: storage.type.function.terraform
    '2':
      name: punctuation.definition.string.begin.terraform
    '3':
      name: string.value.terraform
    '4':
      name: punctuation.definition.string.end.terraform
    '5':
      name: punctuation.definition.string.begin.terraform
    '6':
      name: string.value.terraform
    '7':
      name: punctuation.definition.string.end.terraform
    '8':
      name: punctuation.definition.tag.terraform
  match: (resource)\s+(")(\w+)(")\s+(")(.+)(")\s+({)
  name: meta.resource.terraform

# Provider-like blocks (one variable)
- captures:
    '1':
      name: storage.type.function.terraform
    '2':
      name: punctuation.definition.string.begin.terraform
    '3':
      name: string.value.terraform
    '4':
      name: punctuation.definition.string.end.terraform
    '5':
      name: punctuation.definition.tag.terraform
  match: (provider|provisioner|variable|output|module|atlas)\s+(")([\w-]+)(")\s+({)

# Basic x = "y" matching
- captures:
    '1':
      name: variable.assignment.terraform
    '2':
      name: keyword.operator.terraform
    '3':
      name: punctuation.quote.double.terraform
    '4':
      name: string.value.terraform
    '5':
      name: punctuation.quote.double.terraform
  match: ([\w_-]+)\s+(=)\s(")(.+)(\3)
